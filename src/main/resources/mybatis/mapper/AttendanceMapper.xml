<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loung.semof.attendance.dao.AttendanceMapper">

    <!-- 사원 근태정보 상세 조회  -->
    <select id="selectAttendanceDetail" resultType="com.loung.semof.attendance.dto.AttendanceDto">
        SELECT
            att.ATD_NO,
            emp.EMP_NO,
            emp.EMP_NAME,
            sts.STATUS_NAME,
            att.ATD_DATE,
            att.START_TIME,
            att.END_TIME,
            vac.ALL_DAYS,
            vac.USED_DAYS,
            vac.USED_HALF,
            vac.LEFT_DAYS
        FROM tbl_employee emp
        LEFT JOIN tbl_attendance att ON (emp.EMP_NO = att.EMP_NO)
        LEFT JOIN tbl_attendance_status_info ats ON (att.ATD_NO = ats.ATD_NO)
        LEFT JOIN tbl_attendance_status sts ON (ats.STATUS_CODE = sts.STATUS_CODE)
        LEFT JOIN tbl_emp_vacation_info vac ON (emp.EMP_NO = vac.EMP_NO)
        WHERE emp.EMP_NO = #{ empNo }
        ORDER BY att.ATD_DATE DESC, sts.STATUS_NAME DESC LIMIT 1;
    </select>
    <!-- AND att.ATD_DATE = (SELECT MAX(ATD_DATE) FROM tbl_attendance WHERE EMP_NO = #{ empNo } ORDER BY ATD_DATE DESC LIMIT 1) -->

    <!-- 사원 근태 기록 조회  -->
    <select id="selectAttendanceList" resultType="com.loung.semof.attendance.dto.AttendanceDto">
        SELECT
            att.ATD_NO,
            emp.EMP_NO,
            emp.EMP_NAME,
            sts.STATUS_NAME,
            att.ATD_DATE,
            att.START_TIME,
            att.END_TIME,
            vac.ALL_DAYS,
            vac.USED_DAYS,
            vac.USED_HALF,
            vac.LEFT_DAYS
        FROM tbl_employee emp
        JOIN tbl_attendance att ON (emp.EMP_NO = att.EMP_NO)
        JOIN tbl_attendance_status_info ats ON (att.ATD_NO = ats.ATD_NO)
        JOIN tbl_attendance_status sts ON (ats.STATUS_CODE = sts.STATUS_CODE)
        JOIN tbl_emp_vacation_info vac ON (emp.EMP_NO = vac.EMP_NO)
        WHERE emp.EMP_NO = #{ empNo }
        ORDER BY att.ATD_DATE;
    </select>

    <!-- 사원 연차 현황 조회  -->
    <select id="selectVacationDetail" resultType="com.loung.semof.attendance.dto.AttendanceDto">
        SELECT
            EMP_NAME,
            ALL_DAYS,
            USED_DAYS,
            USED_HALF,
            LEFT_DAYS
        FROM tbl_employee emp
        JOIN tbl_emp_vacation_info vac ON (vac.EMP_NO = emp.EMP_NO)
        WHERE vac.EMP_NO = #{ empNo };
    </select>

    <!-- 아래부터 사원 출퇴근 변경 -->
    <!-- 해당 사원의 마지막 근무번호 불러오기 -->
    <select id="selectLastAttendanceNo" resultType="int">
        SELECT ATD_NO
        FROM TBL_ATTENDANCE
        WHERE ATD_NO IN (SELECT max(ATD_NO)
                         FROM TBL_ATTENDANCE
                         WHERE EMP_NO = #{ empNo });
    </select>

    <!-- 사원 근무상태정보 기록 카운팅 (갯수를 기준으로 출퇴근 처리 제한) -->
    <select id="selectCountAttendanceStatusInfo" resultType="int">
        SELECT count(*)
        FROM tbl_attendance_status_info ats
        WHERE ats.ATD_NO = (SELECT MAX(att.ATD_NO) FROM tbl_attendance att WHERE att.EMP_NO = #{ empNo } )
          AND date_format(ats.OCCUR_TIME, '%Y-%m-%d') = date_format(curdate(),  '%Y-%m-%d');
    </select>

    <!-- 사원 근무정보 행 생성  -->
    <insert id="insertAttendance">
        INSERT INTO tbl_attendance(EMP_NO, ATD_DATE) VALUES (#{ empNo }, NOW());
    </insert>

    <!-- 사원 근무상태정보 기록 생성(출퇴근 발생시간)  -->
    <!-- <insert id="insertAttendanceStatusInfo" parameterType="int"> -->
    <insert id="insertAttendanceStatusInfo" parameterType="hashmap">
        INSERT INTO TBL_ATTENDANCE_STATUS_INFO(ATD_NO, STATUS_CODE, OCCUR_TIME) VALUES (#{ atdNo }, #{ statusCode }, #{ nowTime });
    </insert>

    <!-- 사원 근무정보 출퇴근 시간 변경  -->
    <update id="updateAttendance" parameterType="int">
        UPDATE tbl_attendance att
        <set>
            <if test="statusCode == 1">
                att.START_TIME = (SELECT MAX(ati.OCCUR_TIME)
                                    FROM tbl_attendance_status_info ati
                                   WHERE ati.ATD_NO = #{ atdNo }
                                GROUP BY ati.OCCUR_TIME
                                ORDER BY ati.OCCUR_TIME DESC LIMIT 1)
            </if>
            <if test="statusCode != 1">
                att.END_TIME = (SELECT MAX(ati.OCCUR_TIME)
                                  FROM tbl_attendance_status_info ati
                                 WHERE ati.ATD_NO = #{ atdNo }
                              GROUP BY ati.OCCUR_TIME
                              ORDER BY ati.OCCUR_TIME DESC LIMIT 1)
            </if>
        </set>
        WHERE att.ATD_NO = (SELECT * FROM (SELECT MAX(ATD_NO)
                                             FROM tbl_attendance
                                            WHERE EMP_NO = #{ empNo }
                                         GROUP BY ATD_NO
                                         ORDER BY ATD_NO DESC LIMIT 1) A);
    </update>
</mapper>
