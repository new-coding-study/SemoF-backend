<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loung.semof.board.dao.BoardMapper">

<!--    <resultMap id="empNo" type="com.loung.semof.common.dto.EmployeeDto">-->
<!--        <id property="empNo" column="EMP_NO"/>-->
<!--        <result property="empName" column="EMP_NAME"/>-->
<!--        <result property="empReg" column="EMP_REG"/>-->
<!--        <result property="email" column="EMAIL"/>-->
<!--        <result property="phone" column="PHONE"/>-->
<!--        <result property="address" column="ADDRESS"/>-->
<!--        <result property="salary" column="SALARY"/>-->
<!--        <result property="enrollDate" column="ENROLL_DATE"/>-->
<!--        <result property="retireDate" column="RETIRE_DATE"/>-->
<!--        <result property="workStatus" column="WORK_STATUS"/>-->
<!--        <result property="gender" column="GENDER"/>-->
<!--        <result property="jobCode" column="JOB_CODE"/>-->
<!--        <result property="deptCode" column="DEPT_CODE"/>-->
<!--        <result property="bCode" column="B_CODE"/>-->
<!--    </resultMap>-->

<!--    <resultMap id="boardResultMap" type="com.loung.semof.board.dto.BoardDto">-->
<!--        <id property="boardNo" column="BOARD_NO"/>-->
<!--        <result property="boardTitle" column="BOARD_TITLE"/>-->
<!--        <result property="boardContent" column="BOARD_CONTENT"/>-->
<!--        <result property="writeDate" column="WRITE_DATE"/>-->
<!--        <result property="boardCateCode" column="BOARD_CATE_CODE"/>-->
<!--        <result property="empNo" column="EMP_NO"/>-->
<!--        <result property="empName" column="EMP_NAME"/>-->
<!--        <result property="boardCategoryCode" column="BOARD_CATEGORY_CODE"/>-->
<!--        <result property="boardCategoryName" column="BOARD_CATEGORY_NAME"/>-->
<!--    </resultMap>-->

<!--  공지사항 전체조회를 위한 select문  -->
    <select id="selectNoticeForAllNotice" resultType="BoardDto">
        SELECT
            ROW_NUMBER() OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
            ,TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.CATEGORY_CODE = '1'
        ORDER BY TB.WRITE_DATE DESC
    </select>
<!--공지사항 세부조회를 위한 select문-->
    <select id="selectNoticeDetail" resultType="BoardDto" parameterType="int">
        SELECT
            TB.BOARD_NO
            ,TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '1'
          AND TB.BOARD_NO = #{boardNo}
    </select>

<!-- 페이징 처리를 위해 공지사항 글 갯수를 조회-->
    <select id="selectNoticeTotal" resultType="int">
        SELECT
            count(*)
        FROM tbl_board
        WHERE BOARD_CATE_CODE = 1
    </select>


<!--     페이징 처리를 위해 공지사항 최신 3개 조회-->
    <select id="selectNoticeTopTotal" resultType="int">
        SELECT COUNT(*)
        FROM (
                 SELECT *
                 FROM tbl_board
                 WHERE BOARD_CATE_CODE = 1
                 ORDER BY WRITE_DATE DESC
                     LIMIT 3
             ) SUB
    </select>


<!--    <select id="selectNoticeDetailForEmp" resultType="BoardDto" parameterType="int">-->
<!--        SELECT-->
<!--            TB.BOARD_NO,-->
<!--                TB.BOARD_TITLE,-->
<!--            TB.BOARD_CONTENT,-->
<!--            TB.WRITE_DATE,-->
<!--            TE.EMP_NAME,-->
<!--            TC.BOARD_CATEGORY_NAME-->
<!--        FROM tbl_board TB-->
<!--                 JOIN tbl_board_category TC-->
<!--                      ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)-->
<!--                 JOIN tbl_employee TE-->
<!--                      ON (TB.EMP_NO = TE.EMP_NO)-->
<!--        WHERE TC.CATEGORY_CODE = '1'-->
<!--          AND TB.BOARD_NO = #{boardNo}-->
<!--    </select>-->

<!--공지사항 페이징처리를 위한 select문-->
    <select id="selectNoticeListWithPaging" resultType="BoardDTO">
        SELECT
                P.RN
                ,P.BOARD_TITLE
                ,P.BOARD_CONTENT
                ,P.WRITE_DATE
                ,P.EMP_NAME
                ,P.BOARD_CATEGORY_NAME
                ,P.BOARD_CATE_CODE
        FROM
        (SELECT
             ROW_NUMBER() OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
             ,TB.BOARD_TITLE
             ,TB.BOARD_CONTENT
             ,TB.WRITE_DATE
             ,TE.EMP_NAME
             ,TC.BOARD_CATEGORY_NAME
             ,TB.BOARD_CATE_CODE
         FROM tbl_board TB
         JOIN tbl_board_category TC
         ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
         JOIN tbl_employee TE
         ON (TB.EMP_NO = TE.EMP_NO)
         WHERE TC.BOARD_CATEGORY_CODE = '1'
         ORDER BY TB.WRITE_DATE DESC) P
         LIMIT ${ startRow -1 }, #{ endRow }
    </select>

<!--noticeTop3-->
    <select id="selectNoticeTop3ListWithPaging" resultType="BoardDTO">
        SELECT
            P.RN
             ,P.BOARD_TITLE
             ,P.BOARD_CONTENT
             ,P.WRITE_DATE
             ,P.EMP_NAME
             ,P.BOARD_CATEGORY_NAME
             ,P.BOARD_CATE_CODE
        FROM
            (SELECT
                 ROW_NUMBER() OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
             ,TB.BOARD_TITLE
                  ,TB.BOARD_CONTENT
                  ,TB.WRITE_DATE
                  ,TE.EMP_NAME
                  ,TC.BOARD_CATEGORY_NAME
                  ,TB.BOARD_CATE_CODE
             FROM tbl_board TB
             JOIN tbl_board_category TC
             ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
             JOIN tbl_employee TE
             ON (TB.EMP_NO = TE.EMP_NO)
             WHERE TC.BOARD_CATEGORY_CODE = '1'
             ORDER BY TB.WRITE_DATE DESC) P
            LIMIT ${ startRow -1 }, 3
    </select>

<!--    <select id="selectNoticeListWithPagingForAdmin" resultType="BoardDTO" parameterType="int">-->
<!--        SELECT-->
<!--            P.RN,-->
<!--            P.BOARD_TITLE,-->
<!--            P.BOARD_CONTENT,-->
<!--            P.WRITE_DATE,-->
<!--            P.EMP_NAME,-->
<!--            P.BOARD_CATEGORY_NAME-->
<!--        FROM-->
<!--            (SELECT-->
<!--                 TB.BOARD_NO,-->
<!--                 TB.BOARD_TITLE,-->
<!--                 TB.BOARD_CONTENT,-->
<!--                 TB.WRITE_DATE,-->
<!--                 TE.EMP_NAME,-->
<!--                 TC.BOARD_CATEGORY_NAME,-->
<!--                 ROW_NUMBER() OVER(ORDER BY TB.WRITE_DATE DESC) AS RN-->
<!--             FROM tbl_board TB-->
<!--                      JOIN tbl_board_category TC-->
<!--                           ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)-->
<!--                      JOIN tbl_employee TE-->
<!--                           ON (TB.EMP_NO = TE.EMP_NO)-->
<!--             WHERE TC.CATEGORY_CODE = '1'-->
<!--             AND TE.EMP_NO = #{empNo}) P-->
<!--            LIMIT ${ startRow -1 }, #{ limit }-->
<!--    </select>-->

<!--=======================================posting query=====================================================-->

<!--게시글을 조회하기 위한 select문-->
    <select id="selectBoardForAllPosting" resultType="BoardDto">
        SELECT
            ROW_NUMBER()OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
            ,TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '2'
        ORDER BY TB.WRITE_DATE DESC
    </select>

<!--게시글 세부조회를 위한 select문-->
    <select id="selectPostingDetailForEmp" resultType="BoardDto" parameterType="int">
        SELECT
            TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '2'
        AND TB.BOARD_NO = #{boardNo}
    </select>

<!--관리자를 위한 게시글 세부조회 select문-->
    <select id="selectPostingDetailForAdmin" resultType="BoardDto" parameterType="int">
        SELECT
            TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '2'
        AND TB.BOARD_NO = #{boardNo}
    </select>

    <!--게시글을 위한 페이징 처리-->
    <select id="selectPostingListWithPaging" resultType="BoardDTO">
        SELECT
              P.RN
             ,P.BOARD_TITLE
             ,P.BOARD_CONTENT
             ,P.WRITE_DATE
             ,P.EMP_NAME
             ,P.BOARD_CATEGORY_NAME
             ,P.BOARD_CATE_CODE
        FROM
            (SELECT
                  ROW_NUMBER() over (ORDER BY TB.WRITE_DATE DESC ) AS RN
                  ,TB.BOARD_TITLE
                  ,TB.BOARD_CONTENT
                  ,TB.WRITE_DATE
                  ,TE.EMP_NAME
                  ,TC.BOARD_CATEGORY_NAME
                  ,TB.BOARD_CATE_CODE
             FROM tbl_board TB
             JOIN tbl_board_category TC
             ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
             JOIN tbl_employee TE
             ON (TB.EMP_NO = TE.EMP_NO)
             WHERE TC.BOARD_CATEGORY_CODE = '2') P
             LIMIT ${ startRow-1 }, #{ endRow }
    </select>

    <!-- 페이징 처리를 위해 게시판 글 갯수를 조회-->
    <select id="selectPostingTotal" resultType="int">
        SELECT
            count(*)
        FROM tbl_board
        WHERE BOARD_CATE_CODE = 2
    </select>

    <!--자신이 쓴 게시물에 대한 전체조회-->
    <select id="selectAllPostingForAuthor" resultType="BoardDto" parameterType="int">
        SELECT
            ROW_NUMBER()OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
            ,TB.BOARD_TITLE
            ,TB.BOARD_CONTENT
            ,TB.WRITE_DATE
            ,TE.EMP_NAME
            ,TC.BOARD_CATEGORY_NAME
            ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
        JOIN tbl_board_category TC
        ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '2'
        AND TE.EMP_NO = #{ empNo }
        ORDER BY TB.WRITE_DATE DESC
    </select>

<!--자신이 쓴 글 조회를 위한 페이징 처리-->
    <select id="selectPostingListWithPagingForAuthor" resultType="BoardDTO" parameterType="int">
        SELECT
            ROW_NUMBER() OVER(ORDER BY TB.WRITE_DATE DESC) AS RN
            ,P.BOARD_TITLE
            ,P.BOARD_CONTENT
            ,P.WRITE_DATE
            ,P.EMP_NAME
            ,P.BOARD_CATEGORY_NAME
            ,P.BOARD_CATE_CODE
        FROM
            (SELECT
                 TB.BOARD_NO
                 ,TB.BOARD_TITLE
                 ,TB.BOARD_CONTENT
                 ,TB.WRITE_DATE
                 ,TE.EMP_NAME
                 ,TC.BOARD_CATEGORY_NAME
                 ,TB.BOARD_CATE_CODE
             FROM tbl_board TB
             JOIN tbl_board_category TC
             ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
             JOIN tbl_employee TE
             ON (TB.EMP_NO = TE.EMP_NO)
             WHERE TC.BOARD_CATEGORY_CODE = '2'
             AND TE.EMP_NO = #{empNo}) P
             LIMIT ${ startRow -1 }, #{ limit }
    </select>

    <!--자신이 쓴 게시글에 대한 상세조회-->
    <select id="selectDetailPostingForAuthor" resultType="BoardDto" parameterType="int">
        SELECT
            TB.BOARD_TITLE
             ,TB.BOARD_CONTENT
             ,TB.WRITE_DATE
             ,TE.EMP_NAME
             ,TC.BOARD_CATEGORY_NAME
             ,TB.BOARD_CATE_CODE
        FROM tbl_board TB
                 JOIN tbl_board_category TC
                      ON (TB.BOARD_CATE_CODE = TC.BOARD_CATEGORY_CODE)
                 JOIN tbl_employee TE
                      ON (TB.EMP_NO = TE.EMP_NO)
        WHERE TC.BOARD_CATEGORY_CODE = '2'
          AND TB.BOARD_NO = #{boardNo}
          AND TE.EMP_NO = #{empNo}
    </select>

    <!--공지사항 등록-->
    <insert id="insertNotice" parameterType="boardDto">
        INSERT INTO tbl_board
                (
                  BOARD_TITLE
                , BOARD_CONTENT
                , BOARD_CATE_CODE
                , EMP_NO
                )
        VALUES
                (
                 #{boardTitle}
               , #{boardContent}
               , #{boardCateCode}
               , #{empNo}
                )
    </insert>

    <!--게시글 등록-->
    <insert id="insertPosting" parameterType="boardDto">
        INSERT INTO tbl_board
        (
            BOARD_TITLE
        , BOARD_CONTENT
        , BOARD_CATE_CODE
        , EMP_NO
        )
        VALUES
            (
              #{boardTitle}
            , #{boardContent}
            , #{boardCateCode}
            , #{empNo}
            )
    </insert>

    <!--모든 게시글 수정(관리자)-->
    <update id="updateBoardAll" parameterType="boardDto">
        UPDATE tbl_board TB
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        JOIN tbl_job TJ
        ON (TE.JOB_CODE = TJ.JOB_CODE)
        SET
            TB.BOARD_TITLE = #{boardTitle}
           ,TB.BOARD_CONTENT = #{boardContent}
        WHERE TB.BOARD_NO = #{boardNo}
    </update>

    <!--자신이 작성한 게시글 수정-->
    <update id="updatePosting" parameterType="boardDto">
        UPDATE tbl_board TB
        JOIN tbl_employee TE
        ON (TB.EMP_NO = TE.EMP_NO)
        JOIN tbl_job TJ
        ON (TE.JOB_CODE = TJ.JOB_CODE)
        SET
            TB.BOARD_TITLE = #{boardTitle}
           ,TB.BOARD_CONTENT = #{boardContent}
        WHERE TB.BOARD_CATE_CODE = 2
          AND TB.BOARD_NO = #{boardNo}
          AND TB.EMP_NO = #{empNo}
    </update>

    <!--모든 게시글 삭제(관리자)-->
    <delete id="deleteBoardForAdmin" parameterType="boardDto">
        DELETE FROM tbl_board
        WHERE BOARD_NO = #{boardNo}
    </delete>

    <!--자신이 작성한 게시글 삭제-->
    <delete id="deleteBoardForEmp" parameterType="boardDto">
        DELETE FROM tbl_board
        WHERE BOARD_CATE_CODE = 2
          AND EMP_NO = #{empNo}
          AND BOARD_NO = #{boardNo}
    </delete>

</mapper>